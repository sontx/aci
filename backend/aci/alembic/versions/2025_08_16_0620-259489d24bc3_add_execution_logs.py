"""add execution logs

Revision ID: 259489d24bc3
Revises: fdc89882d2ad
Create Date: 2025-08-16 06:20:06.832620+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '259489d24bc3'
down_revision: Union[str, None] = 'fdc89882d2ad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('execution_details',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('request', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('execution_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('function_name', sa.String(length=255), nullable=False),
    sa.Column('app_name', sa.String(length=100), nullable=False),
    sa.Column('linked_account_owner_id', sa.String(length=255), nullable=True),
    sa.Column('app_configuration_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', name='executionstatus'), nullable=False),
    sa.Column('execution_time', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'created_at')
    )
    op.drop_index(op.f('uq_app_project_id_name'), table_name='apps')
    op.create_index('uq_app_project_id_name', 'apps', [sa.literal_column("coalesce(CAST(project_id AS VARCHAR), 'null_project')"), 'name'], unique=True, postgresql_using='btree')
    op.drop_index(op.f('uq_function_project_id_name'), table_name='functions')
    op.create_index('uq_function_project_id_name', 'functions', [sa.literal_column("coalesce(CAST(project_id AS VARCHAR), 'null_project')"), 'name'], unique=True, postgresql_using='btree')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_function_project_id_name', table_name='functions', postgresql_using='btree')
    op.create_index(op.f('uq_function_project_id_name'), 'functions', [sa.literal_column("COALESCE(project_id::character varying, 'null_project'::character varying)"), 'name'], unique=True)
    op.drop_index('uq_app_project_id_name', table_name='apps', postgresql_using='btree')
    op.create_index(op.f('uq_app_project_id_name'), 'apps', [sa.literal_column("COALESCE(project_id::character varying, 'null_project'::character varying)"), 'name'], unique=True)
    op.drop_table('execution_logs')
    op.drop_table('execution_details')
    op_bind = op.get_bind()
    sa.Enum(
        "success",
        "failed",
        name="executionstatus",
    ).drop(op_bind)
    # ### end Alembic commands ###
